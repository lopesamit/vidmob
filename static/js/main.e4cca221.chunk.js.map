{"version":3,"sources":["components/images/vm-logo-primary.svg","components/images/ic-large-email-generic.svg","components/images/multi-email-cancel.svg","components/Header.js","components/ExistConfirmEmail.js","components/PersonalEmail.js","firebase/firebase.js","components/LandingPage.js","constants/routes.js","components/SignUp.js","components/MultiEmailInput.js","components/CompanySignUp.js","components/SignIn.js","components/ResetPassword.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","Link","to","className","src","require","alt","index_es","variant","ExistConfirmEmail","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClose","bind","assertThisInitialized","event","preventDefault","closeModal","onClick","Component","PersonalEmail","state","navigate","goBack","handleContinue","handleBack","setState","prevState","closePersonalModal","Redirect","pathname","config","firebase","apps","length","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","LandingPage","isAssociated","emailType","error","users","companies","handleNext","usersRef","database","ref","orderByChild","on","snapshot","val","values","map","item","push","companyRef","domainFromEmail","email","split","find","domain","assosciatedUser","_this2","_this3","onSubmit","reactjs_popup_es","open","closeOnDocumentClick","onClose","components_ExistConfirmEmail","style","width","components_PersonalEmail","required","placeholder","id","onChange","propertyName","value","target","defineProperty","type","reactstrap_es","placement","isOpen","byPropKey","SignUp","handleSignUp","companyNameExist","location","landingPageState","signedUpUser","firstName","lastName","displayName","password","companyName","allCompanies","MultiEmailInput","emails","prevProps","handleEmail","commonjs","_emails","getLabel","index","removeEmail","data-tag","key","data-tag-handle","CompanySignUp","handleChange","handleSubmit","RadioGroup_default","aria-label","name","FormControlLabel_default","control","Radio_default","label","components_MultiEmailInput","SignIn","ResetPassword","App","BrowserRouter","components_Header","Route","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+JAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,iECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,iQCwBzBC,EAnBA,kBACXC,EAAAC,EAAAC,cAAA,cACIF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAG,KACLJ,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gCAAgCC,IAAKC,EAAQ,KAAiCC,IAAI,iBAGrGR,EAAAC,EAAAC,cAAA,OAAKG,UAAU,sCACfL,EAAAC,EAAAC,cAAA,SAAOG,UAAU,mBAAjB,6BACAL,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACIJ,UAAU,uBACVK,QAAQ,YAERV,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAG,UAAUC,UAAU,cAA7B,8DCkBGM,cAhCX,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACdE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,YAAcP,EAAKO,YAAYC,KAAjBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAFLA,wHAQNU,GACRA,EAAMC,iBACNR,KAAKJ,MAAMa,8CAKX,OACIzB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,8CAEXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gEACXL,EAAAC,EAAAC,cAAA,OAAKI,IAAKC,EAAQ,KAAwCC,IAAI,UAElER,EAAAC,EAAAC,cAAA,MAAIG,UAAU,QAAd,uBACAL,EAAAC,EAAAC,cAAA,KAAGG,UAAU,uBAAb,gHACAL,EAAAC,EAAAC,cAAA,UACIG,UAAU,iEACVqB,QAASV,KAAKI,aAFlB,oBAxBgBO,sBCgDjBC,cA5CX,SAAAA,EAAYhB,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAY,IACdf,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAc,GAAAT,KAAAH,KAAMJ,KAEDiB,MAAO,CACRC,UAAU,EACVC,QAAQ,GAEZlB,EAAKmB,eAAiBnB,EAAKmB,eAAeX,KAApBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACtBA,EAAKoB,WAAapB,EAAKoB,WAAWZ,KAAhBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KARJA,mFAWdG,KAAKkB,SAAS,CAACC,UAAWnB,KAAKJ,MAAMiB,iDAIrCb,KAAKkB,SAAS,CAACJ,UAAU,yCAGoB,oBAAlCd,KAAKJ,MAAMwB,oBAClBpB,KAAKJ,MAAMwB,sDAIf,OAAGpB,KAAKa,MAAMC,SACH9B,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CACHjC,GAAI,CACAkC,SAAS,UACTT,MAAOb,KAAKa,MAAMM,aAK1BnC,EAAAC,EAAAC,cAAA,OAAKG,UAAU,kDACXL,EAAAC,EAAAC,cAAA,MAAIG,UAAU,QAAd,oCACAL,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAYJ,UAAU,uBAAtB,qFACAL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,oBACXL,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAQJ,UAAU,WAAWqB,QAASV,KAAKiB,YAA3C,UACAjC,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAQJ,UAAU,eAAeqB,QAASV,KAAKgB,gBAA/C,uBAtCQL,sCCJ5BpB,EAAQ,KACRA,EAAQ,KAAUgC,SAWbC,IAASC,KAAKC,QACfF,IAASG,cAVE,CACXC,OAAQC,0CACRC,WAAaD,8BACbE,YAAaF,qCACbG,UAAWH,cACXI,cAAeJ,0BACfK,kBAAmBL,gBCEvB,IA0KeM,cArKX,SAAAA,EAAYvC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmC,IACdtC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqC,GAAAhC,KAAAH,KAAMJ,KAEDiB,MAAQ,CACTuB,cAAc,EACdC,UAAW,GACXC,OAAO,EACPxB,UAAU,EACVyB,MAAO,GACPC,UAAW,IAEf3C,EAAKY,WAAaZ,EAAKY,WAAWJ,KAAhBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAClBA,EAAK4C,WAAa5C,EAAK4C,WAAWpC,KAAhBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAClBA,EAAKuB,mBAAqBvB,EAAKuB,mBAAmBf,KAAxBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAbZA,8MAiBR0C,EAAQ,GACRC,EAAY,GAWZE,EAAWlB,EAASA,SAASmB,WAAWC,IAAI,SAASC,aAAa,kBAClEH,EAASI,GAAG,QAAS,SAACC,EAAUT,GAC/BS,EAASC,OACRlD,OAAOmD,OAAOF,EAASC,OAAOE,IAAI,SAACC,GAC/BZ,EAAMa,KAAKD,qBAIjBE,EAAa7B,EAASA,SAASmB,WAAWC,IAAI,aAAaC,aAAa,kBACxEQ,EAAWP,GAAG,QAAS,SAACC,EAAUT,GACjCS,EAASC,OACRlD,OAAOmD,OAAOF,EAASC,OAAOE,IAAI,SAACC,GAC/BX,EAAUY,KAAKD,+BAKrBnD,KAAKkB,SAAS,CAChBqB,MAAOA,EACPC,UAAWA,4IAKfxC,KAAKkB,SAAS,CAAEmB,UAAW,UAAYvB,UAAU,+EAGpCP,yFACbA,EAAMC,iBACA8C,EAAkBtD,KAAKa,MAAM0C,MAAMC,MAAM,KAAK,YAmBtBxD,KAAKa,MAAM2B,UAAUiB,KAAK,SAACN,GACrD,OAAOA,EAAKO,SAAWJ,kBADrBK,kBAGsB3D,KAAKa,MAAM0B,MAAMkB,KAAK,SAACN,GAC/C,OAAOA,EAAKI,QAAUK,EAAK/C,MAAM0C,sBASjCvD,KAAKkB,SAAS,CAAEmB,UAAW,QAASC,OAAO,IACrCqB,EACN3D,KAAKkB,SAAS,CAAEmB,UAAW,UAAWD,cAAc,IAEpDpC,KAAKkB,SAAS,CAAEmB,UAAW,6JAK/BrC,KAAKkB,SAAS,CAACmB,UAAW,0CAErB,IAAAwB,EAAA7D,KACL,OAAIA,KAAKa,MAAMC,SACJ9B,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CACHjC,GAAI,CACAkC,SC1HG,UD2HHT,MAAOb,KAAKa,SAKxB7B,EAAAC,EAAAC,cAAA,OAAKG,UAAU,wDACXL,EAAAC,EAAAC,cAAA,QAAMG,UAAU,eAAeyE,SAAU9D,KAAKyC,YAC1CzD,EAAAC,EAAAC,cAAA,MAAIG,UAAU,eAAd,0BACAL,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACIJ,UAAU,mBADd,0BAIAL,EAAAC,EAAAC,cAAC6E,EAAA,EAAD,CACIC,KAA+B,YAAzBhE,KAAKa,MAAMwB,UACjB4B,sBAAoB,EACpBC,QAASlE,KAAKS,YAEdzB,EAAAC,EAAAC,cAACiF,EAAD,CAAmBC,MAAO,CAACC,MAAO,SAAU5D,WAAYT,KAAKS,cAGjEzB,EAAAC,EAAAC,cAAC6E,EAAA,EAAD,CACIC,KAA+B,aAAzBhE,KAAKa,MAAMwB,UACjB4B,sBAAoB,GAEpBjF,EAAAC,EAAAC,cAACoF,EAAD,CAAezD,MAAOb,KAAKa,MAAOO,mBAAoBpB,KAAKoB,sBAG/DpC,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACI8E,UAAQ,EACRlF,UAAU,wBACVmF,YAAY,mBACZ9E,QAAQ,WACR+E,GAAG,aACHnC,MAAOtC,KAAKa,MAAMyB,MAClBoC,SAAU,SAAAnE,GAAK,OAAIsD,EAAK3C,UAjJzByD,EAiJ4C,QAjJ9BC,EAiJuCrE,EAAMsE,OAAOD,MAjJ1C,kBAAA9E,OAAAgF,EAAA,EAAAhF,CAAA,GACtC6E,EAAeC,MADF,IAACD,EAAcC,GAkJbG,KAAK,UAET/F,EAAAC,EAAAC,cAAC8F,EAAA,EAAD,CAASC,UAAU,MAAMC,OAAiC,UAAzBlF,KAAKa,MAAMwB,UAAuBwC,OAAO,cACvE7F,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,yEACIF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAG,UAAUC,UAAU,cAA7B,IAA2CL,EAAAC,EAAAC,cAAA,kBAA3C,KADJ,KAIIF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAG,kBAAkBC,UAAU,cAAaL,EAAAC,EAAAC,cAAA,uCAI7DF,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACIJ,UAAU,gDACVK,QAAQ,YACRqF,KAAK,UAHT,kBA1JUpE,+BEPpBwE,UAAY,SAACR,EAAcC,GAAf,OAAyB,kBAAA9E,OAAAgF,EAAA,EAAAhF,CAAA,GACtC6E,EAAeC,MAsJLQ,cAlJX,SAAAA,EAAYxF,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoF,IACdvF,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsF,GAAAjF,KAAAH,KAAMJ,KACDyF,aAAexF,EAAKwF,aAAahF,KAAlBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAEpBA,EAAKgB,MAAQ,CACTuB,cAAc,EACdtB,UAAU,EACVwE,kBAAkB,GAPRzF,+LAYXG,KAAKJ,MAAM2F,yCACJvF,KAAKkB,SAAS,CAChBkB,eAAcpC,KAAKJ,MAAM2F,SAAS1E,OAAQb,KAAKJ,MAAM2F,SAAS1E,MAAMuB,aACpEoD,iBAAkBxF,KAAKJ,MAAM2F,SAAS1E,OAAS,8IAK9CN,GAAM,IAAAqD,EAAA5D,KAEfO,EAAMC,iBACN,IAAMiF,EAAe,CACjBC,UAAY1F,KAAKa,MAAM6E,UACvBC,SAAW3F,KAAKa,MAAM8E,SACtBC,YAAc5F,KAAKa,MAAM+E,aAAe,GACxCC,SAAW7F,KAAKa,MAAMgF,SACtBC,YAAc9F,KAAKa,MAAMiF,aAAe,GACxCvC,MAAOvD,KAAKJ,MAAM2F,SAAS1E,MAAQb,KAAKJ,MAAM2F,SAAS1E,MAAM0C,MAAQ,IAKnEwC,EAAe/F,KAAKJ,MAAM2F,SAAWvF,KAAKJ,MAAM2F,SAAS1E,MAAM2B,UAAY,GAE9EuD,IACiBA,EAAatC,KAAK,SAACN,GAC/B,OAAOA,EAAKO,OAAOF,MAAM,KAAK,KAAOI,EAAK/C,MAAMiF,cAGhD9F,KAAKkB,SAAS,CAACoE,kBAAkB,KAEhB9D,EAASA,SAASmB,WAAWC,IAAI,SACzCQ,KAAKqC,GACdzF,KAAKkB,SAAS,CAACJ,UAAU,EAAMwE,kBAAkB,uCASpD,IAAAzB,EAAA7D,KACL,OAAIA,KAAKa,MAAMC,SACJ9B,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CACHjC,GAAI,CACAkC,SDrEW,kBCsEXT,MAAOb,KAAKa,SAKpB7B,EAAAC,EAAAC,cAAA,OAAKG,UAAU,+CACXL,EAAAC,EAAAC,cAAA,QAAMG,UAAU,eAAeyE,SAAU9D,KAAKqF,cACzCrF,KAAKa,MAAMuB,aACRpD,EAAAC,EAAAC,cAAA,MAAIG,UAAU,uBAAd,wBAEAL,EAAAC,EAAAC,cAAA,MAAIG,UAAU,uBAAd,yBAEJL,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAYJ,UAAU,eAAtB,cACgBW,KAAKa,MAAMuB,aAAc,OAAS,WADlD,4FAKApD,EAAAC,EAAAC,cAAA,OAAKG,UAAU,IACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,iCACXL,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACIJ,UAAU,qBACVK,QAAQ,WACR8E,YAAY,aACZE,SAAU,SAAAnE,GAAK,OAAIsD,EAAK3C,SAASiE,EAAU,YAAa5E,EAAMsE,OAAOD,SACrEL,UAAQ,KAGhBvF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,iCACXL,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACIJ,UAAU,qBACVK,QAAQ,WACR8E,YAAY,YACZE,SAAU,SAAAnE,GAAK,OAAIsD,EAAK3C,SAASiE,EAAU,WAAY5E,EAAMsE,OAAOD,SACpEL,UAAQ,MAIpBvF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gBACXL,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACIJ,UAAU,WACVK,QAAQ,WACR8E,YAAY,eACZE,SAAU,SAAAnE,GAAK,OAAIsD,EAAK3C,SAASiE,EAAU,cAAe5E,EAAMsE,OAAOD,WAE3E5F,EAAAC,EAAAC,cAAA,SAAOG,UAAU,kBAAjB,eAEJL,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACIJ,UAAU,WACVK,QAAQ,WACR8E,YAAY,WACZO,KAAK,WACLR,UAAQ,EACRG,SAAU,SAAAnE,GAAK,OAAIsD,EAAK3C,SAASiE,EAAU,WAAY5E,EAAMsE,OAAOD,WAEtE5E,KAAKa,MAAMuB,aAgBP,KAfFpD,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACIJ,UAAU,WACVK,QAAQ,WACR8E,YAAY,eACZC,GAAG,aACHF,UAAQ,EACRG,SAAU,SAAAnE,GAAK,OAAIsD,EAAK3C,SAASiE,EAAU,cAAe5E,EAAMsE,OAAOD,WAE3E5F,EAAAC,EAAAC,cAAC8F,EAAA,EAAD,CAASC,UAAU,MAAMC,OAAQlF,KAAKa,MAAMyE,iBAAkBT,OAAO,cACjE7F,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,qGAOhBF,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACIJ,UAAU,mDACVK,QAAQ,YACRqF,KAAK,UAHT,YAQA/F,EAAAC,EAAAC,cAAA,KAAGG,UAAU,sDAAb,0CAAyGL,EAAAC,EAAAC,cAAA,wCA7IxGyB,kFCsCNqF,cA7CX,SAAAA,EAAYpG,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgG,IACdnG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkG,GAAA7F,KAAAH,KAAMJ,KAIViB,MAAQ,CACJoF,OAAQ,IANMpG,kFASCqG,EAAW/E,GACvBA,EAAU8E,OAAOvE,SAAW1B,KAAKa,MAAMoF,OAAOvE,QAC7C1B,KAAKJ,MAAMuG,YAAYnG,KAAKa,MAAMoF,yCAGjC,IAAArC,EAAA5D,KACGiG,EAAWjG,KAAKa,MAAhBoF,OACR,OACIjH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACkH,EAAA,gBAAD,CACI5B,YAAY,cACZyB,OAAQA,EACRvB,SAAU,SAAC2B,GACPzC,EAAK1C,SAAS,CAAE+E,OAAQI,KAE5BC,SAAU,SACN/C,EACAgD,EACAC,GAGA,OACAxH,EAAAC,EAAAC,cAAA,OAAKG,UAAU,sBAAsBoH,YAAA,EAASC,IAAKH,GAC9ChD,EACDvE,EAAAC,EAAAC,cAAA,QAAMyH,mBAAA,EAAgBjG,QAAS,kBAAM8F,EAAYD,KAC7CvH,EAAAC,EAAAC,cAAA,OAAKG,UAAU,eAAeC,IAAKC,EAAQ,KAAoCC,IAAI,wBAnCrFmB,aCgEfiG,cAxDX,SAAAA,EAAYhH,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4G,IACd/G,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8G,GAAAzG,KAAAH,KAAMJ,KAaViH,aAAe,SAACtG,GACZV,EAAKqB,SAAS,CAAE0D,MAAOrE,EAAMsE,OAAOD,SAZpC/E,EAAKgB,MAAQ,CACT+D,MAAO,QACPqB,OAAQ,IAEZpG,EAAKgH,aAAehH,EAAKgH,aAAaxG,KAAlBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACpBA,EAAKiH,aAAejH,EAAKiH,aAAazG,KAAlBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACpBA,EAAKsG,YAActG,EAAKsG,YAAY9F,KAAjBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KATLA,yHAkBLU,GACTA,EAAMC,qDAGEyF,GACRjG,KAAKkB,SAAS,CAAC+E,OAAQA,qCAIvB,OACIjH,EAAAC,EAAAC,cAAA,OAAKG,UAAU,qCACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gBACXL,EAAAC,EAAAC,cAAA,MAAIG,UAAU,4BAAd,wBACAL,EAAAC,EAAAC,cAAA,KAAGG,UAAU,cAAb,mIACAL,EAAAC,EAAAC,cAAC6H,EAAA9H,EAAD,CACI+H,aAAW,cACXC,KAAK,iBACLrC,MAAO5E,KAAKa,MAAM+D,MAClBF,SAAU1E,KAAK6G,cAEf7H,EAAAC,EAAAC,cAACgI,EAAAjI,EAAD,CAAkB2F,MAAM,QAAQuC,QAASnI,EAAAC,EAAAC,cAACkI,EAAAnI,EAAD,MAAWoI,MAAM,8BAC1DrI,EAAAC,EAAAC,cAACoI,EAAD,CAAiBnB,YAAanG,KAAKmG,cAEnCnH,EAAAC,EAAAC,cAACgI,EAAAjI,EAAD,CAAkB2F,MAAM,SAASuC,QAASnI,EAAAC,EAAAC,cAACkI,EAAAnI,EAAD,MAAWoI,MAAM,iBAE/DrI,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACIJ,UAAU,gDACVK,QAAQ,YACRgB,QAASV,KAAK8G,cAHlB,iBA5CQnG,aCLb4G,EALA,kBACXvI,EAAAC,EAAAC,cAAA,OAAKG,UAAU,iCACXL,EAAAC,EAAAC,cAAA,MAAIG,UAAU,gCAAd,kBCGOmI,EALO,kBACpBxI,EAAAC,EAAAC,cAAA,OAAKG,UAAU,iCACbL,EAAAC,EAAAC,cAAA,MAAIG,UAAU,gCAAd,yBCyBWoI,mLAfX,OACEzI,EAAAC,EAAAC,cAACwI,EAAA,EAAD,KACE1I,EAAAC,EAAAC,cAAA,OAAKG,UAAU,qCACbL,EAAAC,EAAAC,cAACyI,EAAD,MACA3I,EAAAC,EAAAC,cAAC0I,EAAA,EAAD,CAAOC,OAAK,EAACC,KNhBA,IMgBsBC,UAAW5F,IAC9CnD,EAAAC,EAAAC,cAAC0I,EAAA,EAAD,CAAOC,OAAK,EAACC,KNnBA,UMmBsBC,UAAW3C,IAC9CpG,EAAAC,EAAAC,cAAC0I,EAAA,EAAD,CAAOC,OAAK,EAACC,KNjBQ,kBMiBsBC,UAAWnB,IACtD5H,EAAAC,EAAAC,cAAC0I,EAAA,EAAD,CAAOC,OAAK,EAACC,KNpBA,UMoBsBC,UAAWR,IAC9CvI,EAAAC,EAAAC,cAAC0I,EAAA,EAAD,CAAOC,OAAK,EAACC,KNlBO,kBMkBsBC,UAAWP,aAV7C7G,aCAEqH,QACW,cAA7BC,OAAO1C,SAAS2C,UAEe,UAA7BD,OAAO1C,SAAS2C,UAEhBD,OAAO1C,SAAS2C,SAASC,MACvB,sFCRNC,IAASC,OAAOrJ,EAAAC,EAAAC,cAACoJ,EAAD,MAASC,SAASC,eAAe,SDuH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.e4cca221.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/vm-logo-primary.0faacd91.svg\";","module.exports = __webpack_public_path__ + \"static/media/ic-large-email-generic.032abe26.svg\";","module.exports = __webpack_public_path__ + \"static/media/multi-email-cancel.6cdbd05e.svg\";","import React from 'react'\r\nimport {Button} from '@material-ui/core'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst Header = () => \r\n    <header>\r\n        <Link to='/'>\r\n            <img className=\"position-absolute vidmob-logo\" src={require('./images/vm-logo-primary.svg')} alt=\"vidmod logo\"></img>\r\n        </Link>\r\n\r\n        <div className=\"login-in-wrapper position-absolute\">\r\n        <label className=\"text-white mr-3\"> Already have an account?</label>\r\n        <Button \r\n            className=\"login-btn text-white\"\r\n            variant=\"outlined\" \r\n        >\r\n            <Link to='/signin' className=\"text-white\">Log in</Link>\r\n        \r\n        </Button>\r\n        </div>\r\n\r\n    </header>\r\n\r\nexport default Header","import React, { Component } from 'react';\r\n\r\nclass ExistConfirmEmail extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.handleClose = this.handleClose.bind(this)\r\n    }\r\n    componentDidMount(){\r\n\r\n    }\r\n\r\n    handleClose(event){\r\n        event.preventDefault()\r\n        this.props.closeModal()\r\n    }\r\n\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"position-relative exist-confirmation-email\">\r\n                \r\n                <div className=\"card-icon-wrapper d-flex justify-content-center mx-auto mt-4\">\r\n                    <img src={require(\"./images/ic-large-email-generic.svg\")} alt=\"card\" />\r\n                </div>\r\n                <h5 className=\"my-3\">That looks familiar</h5>\r\n                <p className=\"col-10 mx-auto mb-3\">That email looks like it’s part of an exisitng company. Check your email for an invite to your company.</p>\r\n                <button \r\n                    className=\"bg-transparent border-0 position-absolute text-white close-btn\"\r\n                    onClick={this.handleClose}\r\n                > close x</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExistConfirmEmail;\r\n","import React, { Component } from 'react';\r\nimport { Redirect, Link} from 'react-router-dom';\r\n\r\nimport { Button, InputLabel } from '@material-ui/core'\r\n\r\nclass PersonalEmail extends Component {\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state= {\r\n            navigate: false,\r\n            goBack: false\r\n        }\r\n        this.handleContinue = this.handleContinue.bind(this)\r\n        this.handleBack = this.handleBack.bind(this)\r\n    }\r\n    componentDidMount(){\r\n        this.setState({prevState: this.props.state})\r\n    }\r\n    \r\n    handleContinue(){\r\n        this.setState({navigate: true})\r\n    }\r\n    handleBack(){\r\n        if (typeof this.props.closePersonalModal === 'function') {\r\n            this.props.closePersonalModal();\r\n        }\r\n    }\r\n    render() {\r\n        if(this.state.navigate){\r\n            return <Redirect \r\n                to={{\r\n                    pathname:'/signup',\r\n                    state: this.state.prevState\r\n                }}\r\n            />\r\n        }\r\n        return (\r\n            <div className=\"position-relative text-left personal-email p-3\">\r\n                <h5 className=\"my-3\">That looks like a personal email</h5>\r\n                <InputLabel className=\"col-10 mx-auto mb-3\">Press continue to create a new team, or go back to try finding your team instead.</InputLabel>\r\n                <div className=\"float-right mt-3\">\r\n                    <Button className=\"back-btn\" onClick={this.handleBack}> back </Button>\r\n                    <Button className=\"continue-btn\" onClick={this.handleContinue}> continue </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PersonalEmail;\r\n","import firebase from 'firebase/app';\r\nrequire('firebase/database');\r\nrequire('dotenv').config()\r\n\r\nconst config = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain:  process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n};\r\n\r\nif (!firebase.apps.length) {\r\n    firebase.initializeApp(config);\r\n}\r\n\r\nexport  {\r\n    firebase\r\n}","import React, { Component } from 'react';\r\nimport {TextField, Button, InputLabel} from '@material-ui/core'\r\nimport Popup from \"reactjs-popup\";\r\nimport ExistConfirmEmail from './ExistConfirmEmail'\r\nimport PersonalEmail from './PersonalEmail'\r\nimport { Tooltip } from 'reactstrap'\r\nimport { Redirect, Link} from 'react-router-dom';\r\nimport * as routes from '../constants/routes'\r\n\r\nimport { firebase } from '../firebase'\r\n\r\n\r\nconst byPropKey = (propertyName, value) => () => ({\r\n    [propertyName]: value,\r\n});\r\n\r\nclass LandingPage extends Component {\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            isAssociated: false,\r\n            emailType: '',\r\n            error: false,\r\n            navigate: false,\r\n            users: [],\r\n            companies: [],\r\n        };\r\n        this.closeModal = this.closeModal.bind(this)\r\n        this.handleNext = this.handleNext.bind(this)\r\n        this.closePersonalModal = this.closePersonalModal.bind(this)\r\n    }\r\n    async componentDidMount(){\r\n        // api calls if any\r\n        const users = []\r\n        const companies = []\r\n\r\n        // await Users.users.map((item) =>{\r\n        //     users.push(item)\r\n        // })\r\n\r\n\r\n        // await Companies.companies.map((item) =>{\r\n        //     companies.push(item)\r\n        // })\r\n\r\n        const usersRef = firebase.firebase.database().ref('users').orderByChild('email')\r\n        await usersRef.on(\"value\", (snapshot, error) => {\r\n            if(snapshot.val()){\r\n                Object.values(snapshot.val()).map((item) => {\r\n                    users.push(item)\r\n                })\r\n            }\r\n        })\r\n        const companyRef = firebase.firebase.database().ref('companies').orderByChild('email')\r\n        await companyRef.on(\"value\", (snapshot, error) => {\r\n            if(snapshot.val()){\r\n                Object.values(snapshot.val()).map((item) => {\r\n                    companies.push(item)\r\n                })\r\n            }\r\n        })\r\n\r\n        await this.setState({\r\n            users: users,\r\n            companies: companies\r\n        })\r\n    }\r\n  \r\n    closeModal () {\r\n        this.setState({ emailType: 'confirm' , navigate: true})\r\n    }\r\n\r\n    async handleNext(event){\r\n        event.preventDefault()\r\n        const domainFromEmail = this.state.email.split('@')[1]\r\n        //check for email to be personal\r\n        // this.setState({emailType: 'personal'})\r\n\r\n        // api call to check if the user email is associate with any company.\r\n        // if yes set isAssociated to true\r\n        //api call to check if the email already exist\r\n        // console.log(item)\r\n        // if( item === domainFromEmail ){\r\n        //     this.setState({isAssociated: true})\r\n        //     console.log(\"associated to company\")\r\n        //     return item\r\n        // } else {\r\n        //     console.log(\"not associated to company\")\r\n        //     this.setState({isAssociated: false})\r\n        //     return item\r\n        // }\r\n\r\n        \r\n        const assosciatedUser = await this.state.companies.find((item) => {\r\n            return item.domain === domainFromEmail\r\n        })\r\n        const existingEmail = await this.state.users.find((item) => {\r\n            return item.email === this.state.email\r\n        })\r\n       \r\n\r\n        // await this.state.users.map((item) => {\r\n        //     console.log(item.email)\r\n        // })\r\n        \r\n        if( existingEmail ){\r\n            this.setState({ emailType: 'error', error: true})\r\n        } else if(assosciatedUser){\r\n            this.setState({ emailType: 'confirm', isAssociated: true })\r\n        } else {\r\n            this.setState({ emailType: 'personal'})\r\n        }\r\n    }\r\n\r\n    closePersonalModal () {\r\n        this.setState({emailType: 'none'})\r\n    }\r\n    render() {\r\n        if (this.state.navigate) {\r\n            return <Redirect \r\n                to={{\r\n                    pathname: routes.SIGN_UP,\r\n                    state: this.state\r\n                }}\r\n            />\r\n        }\r\n        return (\r\n        <div className=\"align-self-center col col-lg-4 col-md-6 landing-page\">\r\n            <form className=\"form-control\" onSubmit={this.handleNext}>\r\n                <h3 className=\"get-started\"> Get started on VidMob</h3>\r\n                <InputLabel \r\n                    className=\"text-left w-100\"\r\n                > Enter your work email\r\n                </InputLabel>\r\n                <Popup\r\n                    open={this.state.emailType === 'confirm'}\r\n                    closeOnDocumentClick\r\n                    onClose={this.closeModal}\r\n                >\r\n                    <ExistConfirmEmail style={{width: '320px'}} closeModal={this.closeModal}/>\r\n               \r\n                </Popup>\r\n                <Popup\r\n                    open={this.state.emailType === 'personal'}\r\n                    closeOnDocumentClick\r\n                >\r\n                    <PersonalEmail state={this.state} closePersonalModal={this.closePersonalModal}/>\r\n               \r\n                </Popup>\r\n                <TextField\r\n                    required\r\n                    className=\"float-left mt-3 w-100\"\r\n                    placeholder=\"name@company.com\"\r\n                    variant=\"outlined\"\r\n                    id=\"EmailError\"\r\n                    error={this.state.error}\r\n                    onChange={event => this.setState(byPropKey('email', event.target.value))}\r\n                    type=\"email\"\r\n                />\r\n                <Tooltip placement=\"top\" isOpen={this.state.emailType === 'error'} target=\"EmailError\">\r\n                   <div>\r\n                       <p>That email looks like it’s already taken. Do you want to \r\n                           <Link to='/signin' className=\"text-white\"> <b>login</b> </Link>\r\n                           or \r\n                          \r\n                           <Link to='/reset-password' className=\"text-white\"><b> reset your password? </b></Link>\r\n                           </p>\r\n                   </div>\r\n                </Tooltip>\r\n                <Button\r\n                    className=\"next-btn mt-3 float-right border-0 text-white\"\r\n                    variant=\"contained\"\r\n                    type=\"submit\"\r\n                > Next\r\n                </Button>\r\n            </form>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LandingPage;\r\n","export const SIGN_UP = '/signup';\r\nexport const SIGN_IN = '/signin';\r\nexport const LANDING = '/';\r\nexport const COMPANY_SIGN_UP = '/company-signup';\r\nexport const RESET_PASSWORD = '/reset-password';\r\n\r\n","import React, { Component } from 'react';\r\nimport { TextField, Button, InputLabel } from '@material-ui/core';\r\nimport { Redirect} from 'react-router-dom';\r\nimport { Tooltip } from 'reactstrap'\r\nimport * as routes from '../constants/routes'\r\nimport fs from 'fs'\r\n\r\nimport { firebase } from '../firebase'\r\n\r\nconst byPropKey = (propertyName, value) => () => ({\r\n    [propertyName]: value,\r\n});\r\n\r\nclass SignUp extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.handleSignUp = this.handleSignUp.bind(this)\r\n\r\n        this.state = {\r\n            isAssociated: false,\r\n            navigate: false,\r\n            companyNameExist: false,\r\n        }\r\n    }\r\n\r\n    async componentDidMount(){\r\n        if(this.props.location){\r\n            await this.setState({\r\n                isAssociated: this.props.location.state ? this.props.location.state.isAssociated : false,\r\n                landingPageState: this.props.location.state || null\r\n            })\r\n        }\r\n    }\r\n    \r\n    handleSignUp(event){\r\n        \r\n        event.preventDefault()\r\n        const signedUpUser = {\r\n            firstName : this.state.firstName,\r\n            lastName : this.state.lastName,\r\n            displayName : this.state.displayName || '',\r\n            password : this.state.password,\r\n            companyName : this.state.companyName || '',\r\n            email: this.props.location.state ? this.props.location.state.email : '',\r\n        }\r\n        \r\n    \r\n        \r\n        const allCompanies = this.props.location ? this.props.location.state.companies : []\r\n        \r\n        if(allCompanies){\r\n            const company = allCompanies.find((item) => {\r\n                return item.domain.split('.')[0] === this.state.companyName\r\n            })\r\n            if(company){\r\n                this.setState({companyNameExist: true})\r\n            } else {\r\n                const usersRef = firebase.firebase.database().ref('users');\r\n                usersRef.push(signedUpUser)\r\n                this.setState({navigate: true, companyNameExist: false})\r\n            }\r\n        }\r\n\r\n        // const companyRef = firebase.firebase.database().ref('companies');\r\n        // companyRef.push({})\r\n       \r\n    }\r\n\r\n    render() {\r\n        if (this.state.navigate) {\r\n            return <Redirect \r\n                to={{\r\n                    pathname: routes.COMPANY_SIGN_UP,\r\n                    state: this.state\r\n                }}\r\n            />\r\n        }\r\n        return (\r\n            <div className=\"sign-up align-self-center position-relative\">\r\n                <form className=\"form-control\" onSubmit={this.handleSignUp}>\r\n                    {this.state.isAssociated ?\r\n                        <h3 className=\"join-team text-left\">Join the VidMob team</h3>\r\n                        :\r\n                        <h3 className=\"join-team text-left\">Get started on VidMob</h3>\r\n                    }\r\n                    <InputLabel className=\"input-label\">\r\n                        Your email {this.state.isAssociated? ' is ' : ' wasn\\'t '} \r\n                        associated with an existing company. Fill out the information below to finish the setup.\r\n                    </InputLabel>\r\n\r\n                    <div className=\"\">\r\n                        <div className=\"d-inline-block col-6 p-0 pr-1\">\r\n                            <TextField\r\n                                className=\"d-inline-block col\"\r\n                                variant=\"outlined\"\r\n                                placeholder=\"First Name\"\r\n                                onChange={event => this.setState(byPropKey('firstName', event.target.value))}\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div className=\"d-inline-block col-6 p-0 pl-1\">\r\n                            <TextField \r\n                                className=\"d-inline-block col\"\r\n                                variant=\"outlined\"\r\n                                placeholder=\"Last Name\"\r\n                                onChange={event => this.setState(byPropKey('lastName', event.target.value))}\r\n                                required\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"display-name\">\r\n                        <TextField \r\n                            className=\"col mt-2\"\r\n                            variant=\"outlined\"\r\n                            placeholder=\"Display Name\"\r\n                            onChange={event => this.setState(byPropKey('displayName', event.target.value))}\r\n                        />\r\n                        <label className=\"label-optional\">[optional]</label> \r\n                    </div>\r\n                    <TextField \r\n                        className=\"col mt-2\"\r\n                        variant=\"outlined\"\r\n                        placeholder=\"Password\"\r\n                        type=\"password\"\r\n                        required\r\n                        onChange={event => this.setState(byPropKey('password', event.target.value))}\r\n                    />\r\n                    {!this.state.isAssociated ?\r\n                        <div>\r\n                            <TextField \r\n                                className=\"col mt-2\"\r\n                                variant=\"outlined\"\r\n                                placeholder=\"Company Name\"\r\n                                id=\"EmailError\"\r\n                                required\r\n                                onChange={event => this.setState(byPropKey('companyName', event.target.value))}\r\n                            />\r\n                            <Tooltip placement=\"top\" isOpen={this.state.companyNameExist} target=\"EmailError\">\r\n                                <div>\r\n                                    <p>That company looks like it already exists. Try to Find My Team using your work email.</p>\r\n                                </div>\r\n                            </Tooltip>\r\n                        </div>\r\n                        : null\r\n                    }\r\n\r\n                    <Button\r\n                        className=\"sign-up-btn mt-3 float-right border-0 text-white\"\r\n                        variant=\"contained\"\r\n                        type=\"submit\"\r\n                    >\r\n                        Sign up\r\n                    </Button>\r\n                </form>\r\n                    <p className=\"mt-3 text-center terms-condition position-absolute\">By selecting Sign Up, you agree to our <b>Terms &amp; Conditions</b></p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignUp;\r\n","import React, { Component } from 'react';\r\nimport { ReactMultiEmail } from 'react-multi-email';\r\nimport 'react-multi-email/style.css';\r\n \r\n\r\nclass MultiEmailInput extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        // this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n\r\n    state = {\r\n        emails: [],\r\n    };\r\n \r\n    componentDidUpdate(prevProps, prevState){\r\n        if(prevState.emails.length !== this.state.emails.length)\r\n            this.props.handleEmail(this.state.emails)\r\n    }\r\n    \r\n    render() {\r\n        const { emails } = this.state;\r\n        return (\r\n            <div>\r\n                <ReactMultiEmail\r\n                    placeholder='placeholder'\r\n                    emails={emails}\r\n                    onChange={(_emails) => {\r\n                        this.setState({ emails: _emails });\r\n                    }}\r\n                    getLabel={(\r\n                        email,\r\n                        index,\r\n                        removeEmail,\r\n                    ) => {\r\n                        // this.handleSubmit()\r\n                        return (\r\n                        <div className=\"multi-email-wrapper\" data-tag key={index}>\r\n                            {email}\r\n                            <span data-tag-handle onClick={() => removeEmail(index)}>\r\n                                <img className=\"remove-email\" src={require('./images/multi-email-cancel.svg')} alt=\"cancel\"/>\r\n                            </span>\r\n                        </div>\r\n                        );\r\n                    }}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default MultiEmailInput;","import React, { Component } from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { Button, TextField} from '@material-ui/core'\r\nimport 'react-multi-email/style.css';\r\nimport MultiEmailInput from './MultiEmailInput'\r\n\r\nconst byPropKey = (propertyName, value) => () => ({\r\n    [propertyName]: value,\r\n});\r\n\r\nclass CompanySignUp extends Component {\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            value: 'email',\r\n            emails: []\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.handleEmail = this.handleEmail.bind(this)\r\n    }\r\n    componentDidMount(){\r\n\r\n    }\r\n    handleChange = (event) => {\r\n        this.setState({ value: event.target.value });\r\n    };\r\n    \r\n    handleSubmit(event){\r\n        event.preventDefault()\r\n    }\r\n\r\n    handleEmail(emails){\r\n        this.setState({emails: emails})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"company-sign-up align-self-center\">\r\n                <div className=\"form-control\" >\r\n                    <h3 className=\"company-signup text-left\">Company sign up mode</h3>\r\n                    <p className=\"text-left \"> Anyone with a specified email domain can join your team. Otherwise, an owner or co-owner will have to invite all team members.</p>\r\n                    <RadioGroup\r\n                        aria-label=\"CompanyName\"\r\n                        name=\"company-emails\"\r\n                        value={this.state.value}\r\n                        onChange={this.handleChange}\r\n                    >\r\n                        <FormControlLabel value=\"email\" control={<Radio />} label=\"Any email from my domains\" />\r\n                        <MultiEmailInput handleEmail={this.handleEmail}/>\r\n\r\n                        <FormControlLabel value=\"invite\" control={<Radio />} label=\"Invite only\" />\r\n                    </RadioGroup>\r\n                    <Button\r\n                        className=\"done-btn mt-3 float-right border-0 text-white\"\r\n                        variant=\"contained\"\r\n                        onClick={this.handleSubmit}\r\n                    >\r\n                        Done\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CompanySignUp;\r\n","import React from 'react';\r\n\r\nconst SignIn = () =>\r\n    <div className=\"d-flex justify-content-center\">\r\n        <h1 className=\"align-self-center text-white\">Sign in page</h1>\r\n    </div>\r\n\r\nexport default SignIn;","import React from 'react';\r\n\r\nconst ResetPassword = () =>\r\n  <div className=\"d-flex justify-content-center\">\r\n    <h1 className=\"align-self-center text-white\">Reset Password page</h1>\r\n  </div>\r\n\r\nexport default ResetPassword;","import React, { Component } from 'react';\nimport './App.scss';\nimport Header from './components/Header'\nimport LandingPage from './components/LandingPage'\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport * as routes from './constants/routes'\nimport SignUp from './components/SignUp'\nimport CompanySignUp from './components/CompanySignUp'\nimport SignIn from './components/SignIn'\nimport ResetPassword from './components/ResetPassword'\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App d-flex justify-content-center\">\n          <Header />        \n          <Route exact path={routes.LANDING} component={LandingPage}/>\n          <Route exact path={routes.SIGN_UP} component={SignUp}/>\n          <Route exact path={routes.COMPANY_SIGN_UP} component={CompanySignUp}/>\n          <Route exact path={routes.SIGN_IN} component={SignIn}/>\n          <Route exact path={routes.RESET_PASSWORD} component={ResetPassword}/>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}